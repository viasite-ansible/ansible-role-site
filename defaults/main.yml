---
#site_domain: example.com
site_domains_secondary: []
# www site_domain will be added automatically
site_domains_redirected: []
site_domains_remove: []
site_user: ''

site_dns_ip: "{{ ansible_default_ipv4.address }}"
site_dns_ttl: 10800
site_dns_default_records:
  - record: ''
    type: MX
    value: mx.yandex.ru
    priority: 10
  - record: ''
    type: TXT
    value: "v=spf1 a include:_spf.yandex.net ~all"
  - record: ''
    type: A
    value: "{{ site_dns_ip }}"
  - record: 'www'
    type: A
    value: "{{ site_dns_ip }}"

site_homedir: "/home/{{ site_user }}"
site_wwwdir: "{{ site_homedir }}/www"
site_root: "{{ site_wwwdir }}/{{ site_domain_main }}"
site_root_public: "{{ site_root }}"

site_setup_git: no
site_setup_ssh_keys: yes
site_setup_vim: no
site_setup_zsh: no
site_force_zshrc: no # force write ~/.zshrc when not zsh role provisioned

site_user_zsh_template: user/zshrc.j2

site_mysql_host: localhost
#site_mysql_db: "{{ user }}"
#site_mysql_user: "{{ user }}"
#site_mysql_password: ASLDklkvhlfkdgjm

site_postgresql_host: localhost
#site_postgresql_db: "{{ user }}"
#site_postgresql_user: "{{ user }}"
#site_postgresql_password: ASLDklkvhlfkdgjm

#dns_ns1: ns1.example.com
#dns_ns2: ns2.example.com
#dns_whois_email: admin.example.com
#dns_a: "{{ ansible_default_ipv4.adress }}"
#dns_yandex_mail: yes
#dns_zone_file: /var/lib/bind/{{ site_domain }}.hosts

#mailto:
#- admin@example.com

site_cron_tasks: []
site_cron_vars: []

site_exim4_dkim_private:
site_exim4_dkim_domain: "{{ site_domain | replace('www.', '') }}"

site_letsencrypt_acmesh_args: ""
site_letsencrypt_acmesh_env: "{{ letsencrypt_acmesh_env | default('') }}"
site_letsencrypt_acmesh_deploy_path: ""
site_letsencrypt_acmesh_domains: []

site_ssl: no
site_ssl_certificate:
site_ssl_certificate_key:
site_ssl_hsts: yes
site_ssl_redirect_main_domain: yes
site_ssl_redirect_code: 301

site_solr: no
site_solr_core_name: drupal
site_solr_port: 8983
site_solr_domain:
site_solr_basic_auth: '' # generate with htpasswd -nb user password
site_solr_config_archive:

site_sync_files: no
site_sync_files_force: no # sync when site_root exists
site_sync_files_excluded: # rsync excluded patterns
  - bitrix/backup/*
  - bitrix/cache/*
  - cache/normal/*
  - cachefs/*
  - default/files/styles/*
  - managed_cache/*
  - mnt/*
  - mod-tmp/*
  - sites/default/files/css/*
  - sites/default/files/js/*
  - sites/default/files/languages/*
  - sites/default/files/less/*
  - smarty/compile/*
  - stack_cache/*
  - tmp/*
  - upload/resize_cache/*

#site_ssh_key: ~/.ssh/id_rsa

site_sync_mysql: no
site_sync_mysql_force: no
# dump database before sync
site_sync_mysqldump: yes

site_sync_postgresql: no
site_sync_postgresql_force: no
# dump database before sync
site_sync_postgresqldump: yes

site_php_fpm_defaults:
  pm: ondemand
  pm.max_children: 10
  pm.process_idle_timeout: 30 # worked keepalive, seconds
  pm.start_servers: 1
  pm.min_spare_servers: 1
  pm.max_spare_servers: 3
site_php_version: 7.0 # as in viasite-ansible.php-versions
site_php_socket: "/var/run/php/{{ site_user }}-php{{ site_php_version }}.sock"
site_php_fpm_pool_d: /etc/php/{{ site_php_version }}/fpm/pool.d
site_php_fpm_service_name: php{{ site_php_version }}-fpm

site_nginx_template: # deprecated
site_nginx_config: # http or https, depends on site_ssl
site_nginx_engine: default
site_nginx_engine_server: # avoid to direct define this variable
site_nginx_backend: "{% if site_nginx_engine == 'service' %}service{% else %}apache{% endif %}"
site_nginx_http2: yes # use http2 for https sites

site_nginx_service_host: localhost

site_nginx_custom_http: "" # add after server in template
site_nginx_custom_server_before: "" # add to server in template begin
site_nginx_custom_server: "" # add to server in template end
site_nginx_custom_root_location: "" # add to location / in template
#apache_mpm_itk_max_clients_per_host: 30

site_nginx_location_default: |
  location = /clientstat {
    return 200;
    access_log /var/log/nginx/clientstat.access.log combined_host;
  }

  ## see more settings for mp3, ogg, mp4, flv at https://github.com/perusio/drupal-with-nginx

  ## Replicate the Apache <FilesMatch> directive of Drupal standard
  ## .htaccess. Disable access to any code files. Return a 404 to curtail
  ## information disclosure. Hide also the text files.
  location ~* ^(?:.+\.(?:htaccess|gitignore|make|txt|md|engine|inc|info|install|module|profile|po|sh|.*sql|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
    return 404;
  }

  location ~ /\.(hg|svn|git|bzr) {
    deny all;
  }
  location /backup {
    deny all;
  }
  location /build {
    deny all;
  }
  location /logs {
    deny all;
  }
  location /patches {
    deny all;
  }
  location /tmp {
    deny all;
  }
  location /modified.txt {
    deny all;
  }

  location ~ /site_tests.json {
    return 404;
  }

  ## Disable access logs for robots.txt.
  location = /robots.txt {
    access_log off;
  }

  ## RSS feed support.
  location = /rss.xml {
    try_files $uri @rewrite;
  }

  ## XML Sitemap support.
  # disabled for aspro php sitemaps - https://tagilcity.planfix.ru/task/608042
  #location = /sitemap.xml {
  #  try_files $uri @rewrite;
  #}

  ## xmlrpc support.
  location = /xmlrpc.php {
    proxy_pass http://apache;
    {{ site_nginx_proxy_params | default('') | indent(2) }}
  }

  ## Support for favicon. Return a 204 (No Content) if the favicon
  ## doesn't exist.
  location = /favicon.ico {
    access_log off;
    try_files /favicon.ico =204;
  }

  location = /404.html {
    internal;
  }

# for insert in location /
site_nginx_location_static_files: |
  # Static files location
  location ~* ^.+\.(?:jpg|jpeg|gif|png|ico|css|less|zip|tgz|gz|rar|bz2|doc|docx|xls|xlsx|ppt|ppts|pptsx|exe|txt|tar|mid|midi|wav|bmp|rtf|js|swf|flv|woff|woff2|eot|ttf|cur|svg|webp)$
  {
    # access_log /var/log/nginx/sent.log sent;
    access_log off;
    log_not_found off;
    expires 365d;
    ## No need to bleed constant updates. Send the all shebang in one
    ## fell swoop.
    tcp_nodelay off;
    ## Set the OS file cache.
    open_file_cache max=3000 inactive=120s;
    open_file_cache_valid 45s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;
    #try_files $uri /404.html @fallback;
  }

  ## PDFs and powerpoint files handling.
  location ~* ^.+\.(?:pdf|pptx?)$ {
    expires 30d;
    ## No need to bleed constant updates. Send the all shebang in one
    ## fell swoop.
    tcp_nodelay off;
  }
